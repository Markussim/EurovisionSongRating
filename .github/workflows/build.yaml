name: Build and Release Docker Image

on:
  push:
    branches:
      - master

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
      id-token: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Get version from CHANGELOG.md
        id: get_version
        run: |
          # Extracts version like "1.2.3" from the first line matching "## [1.2.3]"
          version=$(awk -F '[][]' '/^## \[/{gsub(/ /, "", $2); print $2; exit}' CHANGELOG.md)
          if [ -z "$version" ]; then
            echo "Error: Could not extract version from CHANGELOG.md"
            echo "Expected format: ## [X.Y.Z]"
            exit 1
          fi
          echo "version=$version" >> "$GITHUB_OUTPUT"
          echo "Determined version: $version"

      - name: Check if release already exists
        id: check_release
        run: |
          version="${{ steps.get_version.outputs.version }}"
          echo "Checking for existing release: $version"
          if gh release view "$version" > /dev/null 2>&1; then
            echo "Release $version already exists. Skipping build and push."
            echo "release_exists=true" >> "$GITHUB_OUTPUT"
          else
            echo "Release $version does not exist. Proceeding with build and push."
            echo "release_exists=false" >> "$GITHUB_OUTPUT"
          fi
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        if: steps.check_release.outputs.release_exists == 'false'
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        if: steps.check_release.outputs.release_exists == 'false'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Docker meta
        if: steps.check_release.outputs.release_exists == 'false'
        id: meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/${{ github.repository_owner }}/eurovisionsongrating
          tags: |
            type=schedule
            type=ref,event=branch
            type=semver,pattern={{version}},value=${{ steps.get_version.outputs.version }}
            type=sha # Optionally add SHA tag
          flavor: |
            latest=${{ github.ref == format('refs/heads/{0}', 'main') || github.ref == format('refs/heads/{0}', 'master') }}

      - name: Build and Push Image
        if: steps.check_release.outputs.release_exists == 'false'
        uses: docker/build-push-action@v5
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Extract release notes from CHANGELOG.md
        if: steps.check_release.outputs.release_exists == 'false'
        id: extract_release_notes
        uses: ffurrer2/extract-release-notes@v1
        with:
          debug: false 

      - name: Create GitHub Release
        if: steps.check_release.outputs.release_exists == 'false'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.get_version.outputs.version }}
          release_name: Release ${{ steps.get_version.outputs.version }}
          body: ${{ steps.extract_release_notes.outputs.release_notes }}
          draft: false
          prerelease: false